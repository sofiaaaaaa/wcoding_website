# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-13 04:05
from __future__ import unicode_literals

from django.db import migrations

from django.apps import apps

from django.conf import settings

from django.core.exceptions import ObjectDoesNotExist

translatable_model = {
    'Post': ['title', 'slug'],
}


def forwards_func(apps, schema_editor):
    for model, fields in translatable_model.items():
        Model = apps.get_model('posting_system', model)
        ModelTranslation = apps.get_model('posting_system', '{}Translation'.format(model))

        for obj in Model.objects.all():
            translation_fields = {field: getattr(obj, field) for field in fields}
            translation = ModelTranslation.objects.create(
                master_id=obj.pk,
                language_code=settings.LANGUAGE_CODE,
                **translation_fields
            )


def backwards_func(apps, schema_editor):
    for model, fields in translatable_model.itmes():
        Model = apps.get_model('posting_system', model)
        ModelTranslation = apps.get_model('posting_system', '{}Translation'.format(model))

        for obj in Model.objects.all():
            translation = _get_translation(obj, ModelTranslation)
            for field in fields:
                setattr(obj, field, getattr(translation, field))
            obj.save()


def _get_translation(obj, MyModelTranslation):
    translations = MyModelTranslation.objects.filter(master_id=obj.pk)
    try:
        # Try default translation
        return translations.get(language_code=settings.LANGUAGE_CODE)
    except ObjectDoesNotExist:
        # Hope there is a single translation
        return translations.get()


class Migration(migrations.Migration):

    dependencies = [
        ('posting_system', '0005_add_translation_model'),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
    ]
